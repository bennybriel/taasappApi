# Generated by Django 4.1.5 on 2023-11-02 08:41

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone
import taasapp.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('countryID', models.IntegerField()),
                ('createdBy', models.CharField(max_length=100)),
                ('userID', models.CharField(max_length=100)),
                ('createdAt', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Courier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('courierID', models.IntegerField()),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=100)),
                ('createdBy', models.CharField(max_length=100)),
                ('userID', models.CharField(max_length=100)),
                ('createdAt', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coursecode', models.CharField(max_length=20)),
                ('coursetitle', models.CharField(max_length=200)),
                ('courseunit', models.IntegerField()),
                ('level', models.IntegerField()),
                ('semester', models.IntegerField()),
                ('createdBy', models.CharField(max_length=100)),
                ('coursestatus', models.CharField(max_length=5)),
                ('userID', models.CharField(max_length=100)),
                ('createdAt', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('facultyID', models.IntegerField()),
                ('departmentID', models.IntegerField()),
                ('createdAt', models.DateTimeField(auto_now=True)),
                ('createdBy', models.CharField(max_length=100)),
                ('userID', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('facultyID', models.IntegerField()),
                ('createdBy', models.CharField(max_length=100)),
                ('userID', models.CharField(max_length=100)),
                ('createdAt', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minscore', models.IntegerField()),
                ('maxscore', models.IntegerField()),
                ('point', models.FloatField()),
                ('grade', models.CharField(max_length=10)),
                ('createdBy', models.CharField(max_length=100)),
                ('userID', models.CharField(max_length=100)),
                ('createdAt', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('levelID', models.IntegerField()),
                ('createdBy', models.CharField(max_length=100)),
                ('userID', models.CharField(max_length=100)),
                ('createdAt', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='LGA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('lgaID', models.IntegerField()),
                ('stateID', models.IntegerField()),
                ('countryID', models.IntegerField()),
                ('createdBy', models.CharField(max_length=100)),
                ('userID', models.CharField(max_length=100)),
                ('createdAt', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Programme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('facultyID', models.IntegerField()),
                ('programmeID', models.IntegerField()),
                ('createdAt', models.DateTimeField(auto_now=True)),
                ('createdBy', models.CharField(max_length=100)),
                ('userID', models.CharField(max_length=100)),
                ('departmentID', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='RoleTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('roleID', models.IntegerField()),
                ('createdBy', models.CharField(max_length=100)),
                ('userID', models.CharField(max_length=100)),
                ('createdAt', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SchoolSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logopath', models.ImageField(upload_to=taasapp.models.logo_dir_path)),
                ('city', models.CharField(max_length=100)),
                ('slogan', models.CharField(max_length=100)),
                ('shortname', models.CharField(max_length=20)),
                ('country', models.IntegerField()),
                ('address', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=20)),
                ('status', models.BooleanField(default=True)),
                ('createdAt', models.DateTimeField(auto_now=True)),
                ('createdBy', models.CharField(max_length=100)),
                ('userID', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('semesterID', models.IntegerField()),
                ('createdBy', models.CharField(max_length=100)),
                ('userID', models.CharField(max_length=100)),
                ('createdAt', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('sessionID', models.IntegerField()),
                ('createdBy', models.CharField(max_length=100)),
                ('userID', models.CharField(max_length=100)),
                ('createdAt', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Shipping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=100)),
                ('courierID', models.IntegerField()),
                ('countryID', models.IntegerField()),
                ('cost', models.FloatField()),
                ('createdBy', models.CharField(max_length=100)),
                ('userID', models.CharField(max_length=100)),
                ('createdAt', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('countryID', models.IntegerField()),
                ('stateID', models.IntegerField()),
                ('createdBy', models.CharField(max_length=100)),
                ('userID', models.CharField(max_length=100)),
                ('createdAt', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentRecords',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matricno', models.CharField(max_length=50)),
                ('surname', models.CharField(max_length=50)),
                ('firstname', models.CharField(max_length=50)),
                ('othername', models.CharField(max_length=20)),
                ('gender', models.CharField(max_length=10)),
                ('phone', models.CharField(max_length=11)),
                ('address', models.CharField(max_length=200)),
                ('email', models.CharField(max_length=100)),
                ('state', models.IntegerField()),
                ('graduationyear', models.IntegerField()),
                ('nationality', models.IntegerField()),
                ('department', models.IntegerField()),
                ('faculty', models.IntegerField()),
                ('createdBy', models.CharField(max_length=100)),
                ('userID', models.CharField(max_length=100)),
                ('createdAt', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentResults',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matricno', models.CharField(max_length=50)),
                ('semester', models.IntegerField()),
                ('department', models.IntegerField()),
                ('faculty', models.IntegerField()),
                ('level', models.IntegerField()),
                ('score', models.IntegerField()),
                ('coursecode', models.CharField(max_length=20)),
                ('point', models.FloatField()),
                ('grade', models.CharField(max_length=5)),
                ('createdBy', models.CharField(max_length=100)),
                ('userID', models.CharField(max_length=100)),
                ('sessionID', models.IntegerField()),
                ('createdAt', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('admin', 'Admin'), ('manager', 'Manager'), ('standard', 'Standard User')], default='standard', max_length=10)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('status', models.BooleanField(default=True)),
                ('userID', models.CharField(max_length=100)),
                ('otp', models.CharField(blank=True, max_length=6, null=True)),
                ('ipaddress', models.CharField(blank=True, max_length=20, null=True)),
                ('email_verified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
